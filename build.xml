<project name="lights-notifier" default="compile" basedir=".">
	
	<description>
      TeamCity notifier plugin to send messages to a HipChat room.
    </description>

	<property environment="env"/>
	<property name="src" location="src"/>
	<property name="classes" location="classes"/>
	<property name="resources" location="src/resources"/>
	<property name="build" location="build"/>
	<property name="reports" location="reports"/>
	<property name="main-class" value="HipChatNotifier"/>
	<!-- Default to 0.0.0.0 if no version specified -->
	<condition property="version" value="${env.BUILD_NUMBER}" else="0.1.0">
		<and>
			<isset property="env.BUILD_NUMBER"/>
			<not>
				<matches string="${env.BUILD_NUMBER}" pattern="^$"/>
			</not>
		</and>
	</condition>
	<!-- Default to a final tag if no tag type specified -->
	<condition property="tag-type" value="${env.EXECUTE_TAGGING_TYPE}" else="final">
		<and>
			<isset property="env.EXECUTE_TAGGING_TYPE"/>
			<not>
				<matches string="${env.EXECUTE_TAGGING_TYPE}" pattern="^$"/>
			</not>
		</and>
	</condition>
	<property name="vendor" value="What's That Light?"/>
	<!-- Determines whether to include a version etc. in the JAR's filename -->
	<condition property="jar" value="${main-class}-${version}-${tag-type}" else="${main-class}">
		<matches string="${env.MUST_VERSION_ARTIFACTS}" pattern="^-?true|yes|1$" casesensitive="false"/>
	</condition>
	<property name="lib" value="lib"/>
    <property name="teamcity.home" location="${user.home}/TeamCity"/>
    <property name="teamcity.appdir" location="${teamcity.home}/webapps/ROOT/WEB-INF"/>
	<property name="junit.home" value="lib/junit"/>
	<property name="manifest" value="MANIFEST.MF"/>
	<property name="plugin.xml" value="teamcity-plugin.xml"/>
	<property name="plugin-bean.xml" value="build-server-plugin-hipchat-notifier.xml"/>
	<property name="versiontag" value="&lt;version&gt;${version}&lt;/version&gt;"/>

	<path id="classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement location="${classes}"/>
        <pathelement location="${teamcity.appdir}/classes"/>
		<fileset dir="${teamcity.home}/lib" includes="*.jar"/>
        <fileset dir="${teamcity.appdir}/lib" includes="*.jar" excludes="${main-class}*.jar"/>
	</path>
	
	<manifestclasspath property="manifest.classpath" jarfile="${jar}.jar">
		<classpath refid="classpath" />
	</manifestclasspath>
	
	<target name="init">
		<echo>
      Source:         ${src}
      Classes:        ${classes}
	  Classpath:      ${manifest.classpath}
      Resources:      ${resources}
      Build:          ${build}
      Reports:        ${reports}
      Main Class:     ${main-class}
      Version:        ${version}
	  Version Tag:    ${versiontag}
      Vendor:         ${vendor}
      Tag Type:       ${tag-type}
      Jar Name        ${jar}
      Library path:   ${lib}
      JUnit Home:     ${junit.home}
	  TeamCity Home:  ${teamcity.home}
	  TeamCity App:   ${teamcity.appdir}
    </echo>
	</target>

	<target name="compile" depends="init" description="Compile the source code" >
		<mkdir dir="${classes}"/>
		<javac srcdir="${src}" destdir="${classes}" classpathref="classpath" includeAntRuntime="false" debug="on"/>
		<!-- Create manifest on disk to make it easy to view during development -->
		<!-- Help: http://java.sun.com/developer/Books/javaprogramming/JAR/basics/manifest.html -->
		<!--       http://docs.oracle.com/javase/1.4.2/docs/guide/versioning/spec/versioning2.html -->
		<manifest file="${manifest}">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Main-Class" value="${main-class}" />
			<attribute name="Class-Path" value="${manifest.classpath}"/>
			<attribute name="Specification-Title" value="${main-class}" />
			<attribute name="Specification-Version" value="${version}" />
			<attribute name="Specification-Vendor" value="${vendor}" />
			<attribute name="Implementation-Title" value="${main-class}" />
			<attribute name="Implementation-Version" value="${version}" />
			<attribute name="Implementation-Vendor" value="${vendor}" />
		</manifest>
	</target>

	<target name="test" depends="compile" description="Run tests">
		<mkdir dir="${reports}"/>
		<junit haltonerror="true" haltonfailure="true" tempdir="${reports}" failureproperty="junit.failure">
			<classpath refid="classpath"/>
			<formatter type="xml"/>
			<formatter type="plain" usefile="false" />
			<!-- Use simple or batch option -->
			<batchtest fork="true" todir="${reports}">
				<fileset dir="${classes}">
					<include name="**/*Test*"/>
					<include name="log4j.properties"/>
					<exclude name="**/*$*.class"/>
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${reports}">
			<fileset dir="${reports}">
				<include name="TEST-*.xml"/>
			</fileset>
		</junitreport>
	</target>

	<target name="release" depends="compile" description="Generate the distribution" >
		<replaceregexp file="teamcity-plugin.xml" match="&lt;version&gt;.*?&lt;/version&gt;" replace="${versiontag}" />
		<mkdir dir="${build}"/>
		<copy file="${plugin.xml}" todir="${build}"/>
		<jar jarfile="${build}/${jar}.jar" manifest="${manifest}" basedir="${build}">
			<metainf dir="${src}/META-INF"/>
			<fileset dir="${classes}" excludes="**/test/**"/>
			<fileset dir="${resources}"/>
		</jar>
		<mkdir dir="${build}/${lib}"/>
		<copy todir="${build}/${lib}">
		    <fileset dir="${lib}" includes="**"/>
		</copy>
		<zip basedir="${build}" destfile="${jar}.zip" includes="${jar}.jar,${plugin.xml},${lib}/**"/>
		<move file="${jar}.zip" todir="${build}"/>
		<delete file="${build}/${jar}.jar"/>
		<delete file="${build}/${plugin.xml}"/>
		<delete dir="${build}/${lib}"/>
	</target>

	<target name="run" depends="release">
		<java jar="${build}/${jar}.jar" fork="true" />
	</target>

	<target name="clean" description="Clean up">
		<delete dir="${classes}"/>
		<delete dir="${build}"/>
		<delete dir="${reports}"/>
		<delete file="${manifest}"/>
	</target>

</project>
